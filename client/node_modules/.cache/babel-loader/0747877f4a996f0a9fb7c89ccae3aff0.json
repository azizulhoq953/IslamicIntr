{"ast":null,"code":"var _jsxFileName = \"/home/azizul/Desktop/PBL-7th/islamicintr/client/src/scenes/widgets/PostsWidget.js\",\n  _s = $RefreshSig$();\nimport { Typography } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"state\";\nimport PostWidget from \"./PostWidget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsWidget = _ref => {\n  _s();\n  let {\n    userId,\n    isProfile = false\n  } = _ref;\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const token = useSelector(state => state.token);\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  const getPosts = async () => {\n    const response = await fetch(\"http://localhost:3001/posts\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    if (data !== null && data !== void 0 && data.post && data.post.length > 0) {\n      const newPost = data.post.pop();\n      dispatch(setPosts({\n        posts: [newPost, ...shuffleArray(data.post)]\n      }));\n    }\n  };\n  const getUserPosts = async () => {\n    const response = await fetch(`http://localhost:3001/posts/${userId}/posts`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    if (data !== null && data !== void 0 && data.post && data.post.length > 0) {\n      dispatch(setPosts({\n        posts: data.post\n      }));\n    }\n  };\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Array.isArray(posts) && posts.length > 0 ?\n    // Check if 'posts' is defined and is an array with elements\n    posts.map(_ref2 => {\n      let {\n        _id,\n        userId,\n        firstName,\n        lastName,\n        description,\n        location,\n        picturePath,\n        userPicturePath,\n        likes,\n        comments\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(PostWidget, {\n        postId: _id,\n        postUserId: userId,\n        name: `${firstName} ${lastName}`,\n        description: description,\n        location: location,\n        picturePath: picturePath,\n        userPicturePath: userPicturePath,\n        likes: likes,\n        comments: comments\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this);\n    }) :\n    /*#__PURE__*/\n    // Render an alternative content if 'posts' is not an array or is empty\n    _jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        textAlign: \"center\",\n        mt: \"6rem\",\n        fontSize: \"20px\"\n      },\n      children: \"No posts to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(PostsWidget, \"7TqOh3V0nCSP3QUJlbitnmq7L8o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostsWidget;\nexport default PostsWidget;\nvar _c;\n$RefreshReg$(_c, \"PostsWidget\");","map":{"version":3,"names":["Typography","useEffect","useDispatch","useSelector","setPosts","PostWidget","PostsWidget","userId","isProfile","dispatch","posts","state","token","shuffleArray","array","i","length","j","Math","floor","random","getPosts","response","fetch","method","headers","Authorization","data","json","post","newPost","pop","getUserPosts","Array","isArray","map","_id","firstName","lastName","description","location","picturePath","userPicturePath","likes","comments","textAlign","mt","fontSize"],"sources":["/home/azizul/Desktop/PBL-7th/islamicintr/client/src/scenes/widgets/PostsWidget.js"],"sourcesContent":["import { Typography } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"state\";\nimport PostWidget from \"./PostWidget\";\n\nconst PostsWidget = ({ userId, isProfile = false }) => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n  const token = useSelector((state) => state.token);\n\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const getPosts = async () => {\n    const response = await fetch(\"http://localhost:3001/posts\", {\n      method: \"GET\",\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    const data = await response.json();\n    if (data?.post && data.post.length > 0) {\n      const newPost = data.post.pop();\n      dispatch(setPosts({ posts: [newPost, ...shuffleArray(data.post)] }));\n    }\n  };\n\n  const getUserPosts = async () => {\n    const response = await fetch(\n      `http://localhost:3001/posts/${userId}/posts`,\n      {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    const data = await response.json();\n    if (data?.post && data.post.length > 0) {\n      dispatch(setPosts({ posts: data.post }));\n    }\n  };\n\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      {Array.isArray(posts) && posts.length > 0 ? (\n        // Check if 'posts' is defined and is an array with elements\n        posts.map(\n          ({\n            _id,\n            userId,\n            firstName,\n            lastName,\n            description,\n            location,\n            picturePath,\n            userPicturePath,\n            likes,\n            comments,\n          }) => (\n            <PostWidget\n              key={_id}\n              postId={_id}\n              postUserId={userId}\n              name={`${firstName} ${lastName}`}\n              description={description}\n              location={location}\n              picturePath={picturePath}\n              userPicturePath={userPicturePath}\n              likes={likes}\n              comments={comments}\n            />\n          )\n        )\n      ) : (\n        // Render an alternative content if 'posts' is not an array or is empty\n        <Typography\n          variant=\"h5\"\n          sx={{\n            textAlign: \"center\",\n            mt: \"6rem\",\n            fontSize: \"20px\",\n          }}\n        >\n          No posts to display.\n        </Typography>\n      )}\n    </>\n  );\n};\n\nexport default PostsWidget;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}